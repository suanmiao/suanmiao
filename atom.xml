<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[蒜白]]></title>
  <subtitle><![CDATA[碎碎念]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://yoursite.com/"/>
  <updated>2015-12-11T13:39:59.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name><![CDATA[Quinn.Leng]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Project-SmartCar]]></title>
    <link href="http://yoursite.com/2015/Project-SmartCar/"/>
    <id>http://yoursite.com/2015/Project-SmartCar/</id>
    <published>2015-12-11T12:49:14.000Z</published>
    <updated>2015-12-11T13:39:59.000Z</updated>
    <content type="html"><![CDATA[<h4 id="Project_Brief">Project Brief</h4><ul>
<li><strong>Description:</strong> Bluetooth wireless controlled smart-car, which could avoid obstacles and blow out fire automatically</li>
<li><strong>Platform:</strong> Android, STC12 single-chip controller</li>
<li><strong>Award:</strong> First prize in Texas Instruments Electronic Design Contest(TI Cup), HUST devision</li>
<li><strong>Relating Techniques:</strong>  <a href="">MSP430 controller</a>, [Bluetooth 4.0], <a href="https://en.wikipedia.org/wiki/Pulse-width_modulation" target="_blank" rel="external">PWM(Pulse-width_modulation)</a>,  <a href="http://www.sensorwiki.org/doku.php/sensors/ultrasound" target="_blank" rel="external">Ultrasound sensor</a>, <a href="https://www.adafruit.com/products/157" target="_blank" rel="external">infrared sensor</a>, C programming language,<br><strong>Duration: </strong> 2014.5. - 2014.7</li>
<li><strong>Team member(In no particular order):</strong> Hongkun Leng, Longyuan Li, Yiming Wei</li>
</ul>
<h4 id="Background:">Background:</h4><ul>
<li>Smart-car is widely used in many fields, including disaster rescue, outdoor investigation and entertainment industry. We intended to design a smart-car which could not only avoid obstacles and find target automatically, but also interact with people and be controlled by human in emergence situation.</li>
<li>Smartphone, a device with user-friendly user interface, strong computational power,  is a perfect medium to connect people with other devices. Additionally, most smartphones are equipped with Bluetooth interface. Thus, we can use smartphones as the connector between smart-car and human.</li>
</ul>
<a id="more"></a>
<h4 id="Features">Features</h4><h5 id="1-_Avoid_obstacles">1. Avoid obstacles</h5><p>The smart-car was able to avoid obstacles from all directions automatically. This functionality was made possible by utilizing Ultrasound scanners and algorithms on the controller.</p>
<h5 id="2-_Search_for_fire">2. Search for fire</h5><p>In order to search for fire, we should find specific characteristics of fire and choose appropriate characteristics as the basis for our detection and algorithm.<br>After investigation, we found three characteristics:</p>
<ul>
<li>temperature (heat)</li>
<li>visible light</li>
<li>infrared light</li>
</ul>
<p>However, there were several disadvantages of other two characteristics:</p>
<ul>
<li>temperature, heat spread with no linear direction, thus we could not detect the direction of fire from limited number of heat sensors</li>
<li>visible light,  although light emitted by fires are stronger than most other objects, there are still other objects such as lights and the sun that could emit strong lights.</li>
</ul>
<p>Finally, we chose infrared light as the basic characteristic we detect and measure to find the fire</p>
<h5 id="3-_Human_control">3. Human control</h5><p>In some emergence situation, such as the situation when car itself can not react as quickly as human controller, we human should take control of the car. So we developed smartphone based client to control smart-car.<br>On the client side, human controller is able to see the overall situation(speed, direction) of smart-car, and control its movement<br>This functionality was made possible by utilizing Android platform and Bluetooth interface of smartphones.</p>
<h4 id="Hardware_Components">Hardware Components</h4><p>In order to make our overall structure more flexible and reusable, we devised and implemented other four components separately and manage them through the center-algorithm on the center controller.</p>
<h5 id="1-_Center_Controller">1. Center Controller</h5><p>This component is responsible for managing other four components.<br>MSP430 controller, a 16 bits, super low energy consumption, RISC(Reduced instruction set computing) processor, is the major part of this component. This controller is able to connect and manage wireless component, motor component easily through its rich IO mouths. Additionally, applications could be transmitted and flashed into this controller through USB, thus the development process became efficient.</p>
<p><strong>MSP430 controller</strong><br><img src="/img/smartcar/center_controller.png" alt="Alt text"></p>
<h5 id="2-_Path_detection_component">2. Path detection component</h5><p>In order to avoid obstacles, we chose ultrasound as the basic measurement signal. ultrasound spreads linearly and when there are obstacles, certain amount of ultrasound of same frequency would be reflected back. Utilizing this mechanism, we devised corresponding algorithms on the controller.</p>
<h5 id="3-_Fire-detection_and_fire-put-out_component">3. Fire-detection and fire-put-out component</h5><p>As investigated in the first section, we chose infrared as the basic detection source. Thus ST188 infrared sensor was used by us to implement this functionality.</p>
<p><strong>Infrared sensors</strong><br><img src="/img/smartcar/fire_detection.png" alt="Alt text"></p>
<p>Putting out a fire required strong wind from a big fan. Under this condition, we can not connect this component directly into the IO mouth of center controller but to design a specific current driver for this component. After investigation, we chose L298N, a efficient and cheap current driver to take this responsibility.</p>
<p><strong>Fans and current controller</strong><br><img src="/img/smartcar/fans_and_controller.png" alt="Alt text"></p>
<h5 id="4-_Movement_component">4. Movement component</h5><p>This component included two functionalities: movement and speed-tracing.</p>
<p>For the movement function, we had to drive four DC motors at the same time, this requires on current could be met by L298 current driver.</p>
<p><img src="/img/smartcar/current_driver_motor.jpg" alt="Alt text"></p>
<p>In order to trace the real-time speed, we chose 74HC14 infrared component to implement this functionality.<br><strong>Speed tracing and tracing wheel</strong><br><img src="/img/smartcar/speed_tracing_and_tracing_wheel.png" alt="Alt text"></p>
<h5 id="5-_Communication_component">5. Communication component</h5><p>In order to communicate with smartphones through Bluetooth, we chose HC-06 Bluetooth component as the basic communication controller.</p>
<p><strong>Basic commands and signals:</strong></p>
<ul>
<li>Current speed</li>
<li>Current direction</li>
<li>Turn-Left command</li>
<li>Turn-Right command</li>
<li>Forward command</li>
<li>Backward command</li>
</ul>
<p>Combining these basic signals, we could produce some more complicated commands such as forward-left and backward-right.</p>
<h4 id="Software_Client">Software Client</h4><p>Three functionalities were provided by software client:</p>
<ul>
<li>Displaying current state. On the screen, users could see current speed and direction of the smart-car.</li>
<li>Movement control. Our client provided a gamepad-like experience to control the smart-car, users can control the direction, speed on the touchscreen with good user experience.</li>
<li>Function control. In order to switch between different modes in time of emergency, there were a panel for user to control the function of this smart car.</li>
</ul>
<p><img src="/img/smartcar/client_layout.png" alt="Alt text"></p>
]]></content>
    <summary type="html">
    <![CDATA[<h4 id="Project_Brief">Project Brief</h4><ul>
<li><strong>Description:</strong> Bluetooth wireless controlled smart-car, which could avoid obstacles and blow out fire automatically</li>
<li><strong>Platform:</strong> Android, STC12 single-chip controller</li>
<li><strong>Award:</strong> First prize in Texas Instruments Electronic Design Contest(TI Cup), HUST devision</li>
<li><strong>Relating Techniques:</strong>  <a href="">MSP430 controller</a>, [Bluetooth 4.0], <a href="https://en.wikipedia.org/wiki/Pulse-width_modulation">PWM(Pulse-width_modulation)</a>,  <a href="http://www.sensorwiki.org/doku.php/sensors/ultrasound">Ultrasound sensor</a>, <a href="https://www.adafruit.com/products/157">infrared sensor</a>, C programming language,<br><strong>Duration: </strong> 2014.5. - 2014.7</li>
<li><strong>Team member(In no particular order):</strong> Hongkun Leng, Longyuan Li, Yiming Wei</li>
</ul>
<h4 id="Background:">Background:</h4><ul>
<li>Smart-car is widely used in many fields, including disaster rescue, outdoor investigation and entertainment industry. We intended to design a smart-car which could not only avoid obstacles and find target automatically, but also interact with people and be controlled by human in emergence situation.</li>
<li>Smartphone, a device with user-friendly user interface, strong computational power,  is a perfect medium to connect people with other devices. Additionally, most smartphones are equipped with Bluetooth interface. Thus, we can use smartphones as the connector between smart-car and human.</li>
</ul>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[Project-Fun]]></title>
    <link href="http://yoursite.com/2015/Project-Fun/"/>
    <id>http://yoursite.com/2015/Project-Fun/</id>
    <published>2015-12-09T12:51:42.000Z</published>
    <updated>2015-12-09T12:52:36.000Z</updated>
    <content type="html"><![CDATA[<h4 id="Project_Brief">Project Brief</h4><ul>
<li><strong>Description:</strong> Socket streaming video-chat application, which could control sex toys at the same time</li>
<li><strong>Platform:</strong> Android, STC12 singlechip</li>
<li><strong>Award:</strong> First prize in <a href="http://hacks.hustunique.com/" target="_blank" rel="external">Unique Hackday 2014</a></li>
<li><strong>Relating Techniques:</strong>  <a href="https://en.wikipedia.org/wiki/Network_socket" target="_blank" rel="external">TCP Socket</a>, <a href="https://nodejs.org/en/" target="_blank" rel="external">Node.js</a>, Java, <a href="http://www.alldatasheet.com/datasheet-pdf/pdf/115335/ETC1/STC12C2052.html" target="_blank" rel="external">STC12C2052</a>, <a href="https://en.wikipedia.org/wiki/Bluetooth_low_energy" target="_blank" rel="external">Bluetooth 4.0</a><br><strong>Duration: </strong> 2014.2.23 - 2012.2.24</li>
<li><strong>Team member:</strong> Hongkun Leng, Jialin Liang, Su Li</li>
</ul>
<h4 id="Background:">Background:</h4><ul>
<li>The rapid development of IoT(Internet of Things)  influence our life impressively. Attracted by the ubiquitous trend, we were eager to take our part. </li>
<li>The rise of open source hardware, <a href="https://en.wikipedia.org/wiki/Raspberry_Pi" target="_blank" rel="external">Raspberry PI</a> <a href="https://en.wikipedia.org/wiki/Arduino" target="_blank" rel="external">Arduino</a> and other existing ARM, 51 platform, made the development of new IoT device easier and more powerful. Under this circumstance, we chose STC12 as the hardware platform and connected it with Android application through Bluetooth 4.0  </li>
<li>There had been some existing products. However they lacked some essential features such as video chat and voice chat, which we considered critical for a IoT toy.</li>
</ul>
<a id="more"></a>
<h4 id="Components">Components</h4><h5 id="1-_Client_side">1. Client side</h5><p>The Android based application was responsible for video chatting and control of toys.<br>There were four functions of the client side</p>
<ul>
<li>Toys control. the application was able to control the strength, length and shaking mode of the toy through widgets on panel page.</li>
</ul>
<p><img src="/img/fun/control_page.png" alt="Alt text"></p>
<ul>
<li>Square and Pair. In order to be paired with the right person, one could search on the “Square page” and pair with users he/she like. </li>
</ul>
<p><img src="/img/fun/social_page.png" alt="Alt text"></p>
<ul>
<li>Video chat. After paring with a specific user, they can connect with each other and video-chat with each other. The upper and bottom part of the screen were face of relatively current user and current connected user.</li>
</ul>
<p><img src="/img/fun/video_chat_page.png" alt="Alt text"></p>
<ul>
<li>Remote control. Besides controlling their own toys, paired users could also control toys of each other through Socket Streaming.</li>
</ul>
<p>In order to development these functions, I used these techniques:</p>
<ul>
<li>TCP Socket. Although no direct connection can be set under mobile network, we could connect clients indirectly through servers. TCP Socket was able to exchange  streaming data with servers. On Android platform, there was already existing Socket API for this technique, On Server side, there was Node.js Socket.io plugin to implement the same protocol.</li>
<li>Surface View. Displaying large quantity of images on mobile devices takes pretty much computing and  memory space resources. In order to reduce potential influence on mobile device, I chose “”SurfaceView” widget, which could handle data on multiple threads,  to display these images.</li>
<li>Bluetooth 4.0. Bluetooth was responsible for exchanging data between mobile and toys.</li>
</ul>
<h5 id="2-_Hardware_component">2. Hardware component</h5><p>The hardware part was responsible for exchanging signals with mobile devices and driving toys. This part was consisted of three components:</p>
<ul>
<li>Bluetooth component. This component was responsible for exchanging signals with mobile devices. These signals were then sent to microchip.</li>
<li>STC 12 microchip. This was processing center of this hardware device. It was in charge of exchanging and processing signals from mobile devices, controlling the micro motor component.</li>
<li>Micro Motor. This component was responsible for driving toys with received electronic signal.</li>
</ul>
<p><img src="/img/fun/hardware_1.png" alt="Alt text"><br><img src="/img/fun/hardware_2.png" alt="Alt text"><br><img src="/img/fun/hardware_3.png" alt="Alt text"></p>
<h5 id="3-_Server_side">3. Server side</h5><p>On the server side, we used Node.js framework and Socket.io framework to provide real-time streaming functionality.<br>There were some advantages of this platform:</p>
<ul>
<li>Asynchronous operation. This feature made it possible for one server to exchange data with multiple clients at the same time with high efficiency.</li>
<li>Easy to deploy. All code could be modified and deployed within several lines of command. </li>
</ul>
<h5 id="4-_Streaming_optimization">4. Streaming optimization</h5><p>Sending each complete frame on the stream is not a efficient strategy for video-chat. In order to reduce traffic pressure, we devised a streaming strategy:</p>
<ul>
<li>We only send complete frame in the first connection, after that, only difference between two neighbor frames is sent. </li>
<li>In some case, when the connection is disrupted, and connected again, some differences would be lost. In order to maintain a stable streaming, we recorded time stamp for each frame, and compare the time stamp between two neighbor frames. If there the difference between two time stamps is bigger than threshold, a signal will be sent. And the server will send a complete frame.</li>
<li>Data is compressed in gzip format in order to make efficient transmission.</li>
</ul>
<h4 id="Relating_pictures">Relating pictures</h4><p><img src="/img/fun/procedure_1.JPG" alt="Alt text"><br><img src="/img/fun/procedure_2.JPG" alt="Alt text"><br><img src="/img/fun/procedure_3.jpeg" alt="Alt text"></p>
]]></content>
    <summary type="html">
    <![CDATA[<h4 id="Project_Brief">Project Brief</h4><ul>
<li><strong>Description:</strong> Socket streaming video-chat application, which could control sex toys at the same time</li>
<li><strong>Platform:</strong> Android, STC12 singlechip</li>
<li><strong>Award:</strong> First prize in <a href="http://hacks.hustunique.com/">Unique Hackday 2014</a></li>
<li><strong>Relating Techniques:</strong>  <a href="https://en.wikipedia.org/wiki/Network_socket">TCP Socket</a>, <a href="https://nodejs.org/en/">Node.js</a>, Java, <a href="http://www.alldatasheet.com/datasheet-pdf/pdf/115335/ETC1/STC12C2052.html">STC12C2052</a>, <a href="https://en.wikipedia.org/wiki/Bluetooth_low_energy">Bluetooth 4.0</a><br><strong>Duration: </strong> 2014.2.23 - 2012.2.24</li>
<li><strong>Team member:</strong> Hongkun Leng, Jialin Liang, Su Li</li>
</ul>
<h4 id="Background:">Background:</h4><ul>
<li>The rapid development of IoT(Internet of Things)  influence our life impressively. Attracted by the ubiquitous trend, we were eager to take our part. </li>
<li>The rise of open source hardware, <a href="https://en.wikipedia.org/wiki/Raspberry_Pi">Raspberry PI</a> <a href="https://en.wikipedia.org/wiki/Arduino">Arduino</a> and other existing ARM, 51 platform, made the development of new IoT device easier and more powerful. Under this circumstance, we chose STC12 as the hardware platform and connected it with Android application through Bluetooth 4.0  </li>
<li>There had been some existing products. However they lacked some essential features such as video chat and voice chat, which we considered critical for a IoT toy.</li>
</ul>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[Project-Weclient]]></title>
    <link href="http://yoursite.com/2015/Project-Weclient/"/>
    <id>http://yoursite.com/2015/Project-Weclient/</id>
    <published>2015-12-01T12:26:53.000Z</published>
    <updated>2015-12-09T12:28:54.000Z</updated>
    <content type="html"><![CDATA[<h4 id="Project_Brief">Project Brief</h4><ul>
<li><strong>Description:</strong> WeChat account management application (Open Source)</li>
<li><strong>Platform:</strong> Android</li>
<li><strong>Attribution:</strong> over <strong>530,000 users</strong>, <strong>130 stars and 50 forks on Github</strong></li>
<li><strong>Relating Techniques:</strong>  Java, <a href="http://developer.android.com/guide/components/fundamentals.html" target="_blank" rel="external">Android Application Components</a>, <a href="http://developer.android.com/design/patterns/widgets.html" target="_blank" rel="external">Android Widgets</a>, <a href="https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model/Introduction" target="_blank" rel="external">HTML DOM</a>,  <a href="https://en.wikipedia.org/wiki/HTTP_cookie" target="_blank" rel="external">HTTP Cookie</a>, Regex</li>
<li><strong>Duration: </strong> 2013.11 - 2015.5</li>
<li><strong>Team member:</strong> Hongkun Leng(Developer), Hong Xiao(Product Designer), Bin Fan(Product Designer) </li>
</ul>
<a id="more"></a>
<h4 id="Background:">Background:</h4><p>Originally(before May 2015), there was no official mobile application for WeChat account management, the only approach was official website, which only worked properly on desktop. However, most frequently behavior, message view and reply, happens randomly. So there was a high demand for account management features on mobile devices.</p>
<p>Webpage for Wechat official account management</p>
<p><img src="/img/weclient/Before_login.png" alt="Alt text"></p>
<h4 id="Process">Process</h4><h5 id="1-Developed_login_simulating_framework">1.Developed login simulating framework</h5><p> In order to implement management features on mobile, we had to get necessary data for each operation, while there was no official API for us to execute such operation. So the only way was simulating HTTP request as it was on the webpage.</p>
<p>  For every HTTP request, there were some fundamental elements we had to know:</p>
<ul>
<li>Target server URL</li>
<li>Request Method(POST, GET, DELETE)</li>
<li>Method Parameters</li>
<li>Necessary Header parameters</li>
</ul>
<p>To get these elements, I used Chrome Developer Console, a perfect tool for web developer, on which we could get intercept and analyze elements for each HTTP requests<br><img src="/img/weclient/General Info.png" alt="Alt text"></p>
<p>There were some basic techniques relating to simulating requests</p>
<ul>
<li>MD5 encryption (official encryption for password transmission and storage is MD5, a widely used encryption)</li>
<li>Cookie management, parse Cookie, store Cookie, read Cookie</li>
</ul>
<p>After simulating necessary requests, we could get the same HTML code as webpage version. Then, we had to parse HTML structure of the result and get what we need.<br>For example:<br>  <img src="/img/weclient/Result.png" alt="Alt text"></p>
<h5 id="2-Developed_Message_magement_function">2.Developed Message magement function</h5><p>After simulating necessary functions, the second step was to implement features. The most frequently used feature for Wechat account owners was message management. Due to the random distribution of fans(people who followed this account), message were received randomly, so account users have to wait in front of their desktop if there was no mobile application.  </p>
<p>After simulating functions,  the message data we got:</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="string">"msg_item"</span>:[&#123;<span class="string">"id"</span>:<span class="number">401082279</span>,<span class="string">"type"</span>:<span class="number">2</span>,<span class="string">"fakeid"</span>:<span class="string">"355421075"</span>,<span class="string">"nick_name"</span>:<span class="string">"蒜苗白菜"</span>,<span class="string">"date_time"</span>:<span class="number">1449148933</span>,<span class="string">"source"</span>:<span class="string">""</span>,<span class="string">"msg_status"</span>:<span class="number">0</span>,<span class="string">"has_reply"</span>:<span class="number">0</span>,<span class="string">"refuse_reason"</span>:<span class="string">""</span>,<span class="string">"multi_item"</span>:[],<span class="string">"to_uin"</span>:<span class="number">2390625095</span>&#125;,</span><br><span class="line">&#123;<span class="string">"id"</span>:<span class="number">401082278</span>,<span class="string">"type"</span>:<span class="number">2</span>,<span class="string">"fakeid"</span>:<span class="string">"355421075"</span>,<span class="string">"nick_name"</span>:<span class="string">"蒜苗白菜"</span>,<span class="string">"date_time"</span>:<span class="number">1449148925</span>,<span class="string">"source"</span>:<span class="string">""</span>,<span class="string">"msg_status"</span>:<span class="number">0</span>,<span class="string">"has_reply"</span>:<span class="number">0</span>,<span class="string">"refuse_reason"</span>:<span class="string">""</span>,<span class="string">"multi_item"</span>:[],<span class="string">"to_uin"</span>:<span class="number">2390625095</span>&#125;,</span><br><span class="line">&#123;<span class="string">"id"</span>:<span class="number">401082277</span>,<span class="string">"type"</span>:<span class="number">1</span>,<span class="string">"fakeid"</span>:<span class="string">"355421075"</span>,<span class="string">"nick_name"</span>:<span class="string">"蒜苗白菜"</span>,<span class="string">"date_time"</span>:<span class="number">1449148906</span>,<span class="string">"content"</span>:<span class="string">"Test message two "</span>,<span class="string">"source"</span>:<span class="string">""</span>,<span class="string">"msg_status"</span>:<span class="number">0</span>,<span class="string">"has_reply"</span>:<span class="number">0</span>,<span class="string">"refuse_reason"</span>:<span class="string">""</span>,<span class="string">"multi_item"</span>:[],<span class="string">"to_uin"</span>:<span class="number">2390625095</span>&#125;,</span><br><span class="line">&#123;<span class="string">"id"</span>:<span class="number">401082275</span>,<span class="string">"type"</span>:<span class="number">1</span>,<span class="string">"fakeid"</span>:<span class="string">"355421075"</span>,<span class="string">"nick_name"</span>:<span class="string">"蒜苗白菜"</span>,<span class="string">"date_time"</span>:<span class="number">1449148900</span>,<span class="string">"content"</span>:<span class="string">"Test message one "</span>,<span class="string">"source"</span>:<span class="string">""</span>,<span class="string">"msg_status"</span>:<span class="number">0</span>,<span class="string">"has_reply"</span>:<span class="number">0</span>,<span class="string">"refuse_reason"</span>:<span class="string">""</span>,<span class="string">"multi_item"</span>:[],<span class="string">"to_uin"</span>:<span class="number">2390625095</span>&#125;]&#125;</span><br></pre></td></tr></table></figure>
<p>Obviously, this set of data was in JSON format, and we could serialize it into corresponding JSON object list.</p>
<p>There were some basic element in each “Message Object”</p>
<ul>
<li>id: the unique identify number for each message</li>
<li>fakeid: the id of user who send this message</li>
<li>nick_name: nick name for the sending user</li>
<li>to_uin: the id of official account to whom this message is sending</li>
<li>content: content of this message</li>
<li>date_time: time when this message was created</li>
</ul>
<p>After analyse, we found some relating features and their HTTP request URL</p>
<ul>
<li><strong>get message</strong>:    <a href="https://mp.weixin.qq.com/cgi-bin/message" target="_blank" rel="external">https://mp.weixin.qq.com/cgi-bin/message</a></li>
<li><strong>star message</strong>:  <a href="https://mp.weixin.qq.com/cgi-bin/setstarmessage" target="_blank" rel="external">https://mp.weixin.qq.com/cgi-bin/setstarmessage</a></li>
<li><strong>reply message</strong>:      <a href="https://mp.weixin.qq.com/cgi-bin/singlesend" target="_blank" rel="external">https://mp.weixin.qq.com/cgi-bin/singlesend</a></li>
</ul>
<p>Finally, we implemented these features on mobile with user-friendly user interface</p>
<p>Relating techniques</p>
<ul>
<li>ListView, ViewPager Widget </li>
<li>MVVM software architectural pattern</li>
<li>Media Player component</li>
</ul>
<p><img src="/img/weclient/message_list_1.jpeg" alt="Alt text"></p>
<p>For better user experience, We even developed an one-to-one chat page for each conversation</p>
<p><img src="/img/weclient/message_chat.jpeg" alt="Alt text"></p>
<h5 id="3-Developed_Fans_management_function">3.Developed Fans management function</h5><p>In the same way, we parsed and clipped result for fans list</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">groupsList : (&#123;<span class="string">"groups"</span>:[&#123;<span class="string">"id"</span>:<span class="number">0</span>,<span class="string">"name"</span>:<span class="string">"未分组"</span>,<span class="string">"cnt"</span>:<span class="number">9</span>&#125;,&#123;<span class="string">"id"</span>:<span class="number">1</span>,<span class="string">"name"</span>:<span class="string">"黑名单"</span>,<span class="string">"cnt"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"id"</span>:<span class="number">2</span>,<span class="string">"name"</span>:<span class="string">"星标组"</span>,<span class="string">"cnt"</span>:<span class="number">1</span>&#125;,</span><br><span class="line">&#123;<span class="string">"id"</span>:<span class="number">101</span>,<span class="string">"name"</span>:<span class="string">"safsdaf"</span>,<span class="string">"cnt"</span>:<span class="number">0</span>&#125;]&#125;).groups,</span><br><span class="line">                        friendsList : (&#123;<span class="string">"contacts"</span>:[&#123;<span class="string">"id"</span>:<span class="number">3040136284</span>,<span class="string">"nick_name"</span>:<span class="string">"Yun"</span>,<span class="string">"remark_name"</span>:<span class="string">""</span>,<span class="string">"group_id"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"id"</span>:<span class="number">3179091161</span>,<span class="string">"nick_name"</span>:<span class="string">"未必美好"</span>,<span class="string">"remark_name"</span>:<span class="string">""</span>,<span class="string">"group_id"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"id"</span>:<span class="number">1281585781</span>,<span class="string">"nick_name"</span>:<span class="string">"Chensq"</span>,<span class="string">"remark_name"</span>:<span class="string">"陈水强"</span>,<span class="string">"group_id"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"id"</span>:<span class="number">1211335984</span>,<span class="string">"nick_name"</span>:<span class="string">"侦探们的镇魂歌"</span>,<span class="string">"remark_name"</span>:<span class="string">""</span>,<span class="string">"group_id"</span>:<span class="number">2</span>&#125;,&#123;<span class="string">"id"</span>:<span class="number">1175038025</span>,<span class="string">"nick_name"</span>:<span class="string">"李恒"</span>,<span class="string">"remark_name"</span>:<span class="string">""</span>,<span class="string">"group_id"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"id"</span>:<span class="number">2149997763</span>,<span class="string">"nick_name"</span>:<span class="string">"阿宽"</span>,<span class="string">"remark_name"</span>:<span class="string">""</span>,<span class="string">"group_id"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"id"</span>:<span class="number">791213410</span>,<span class="string">"nick_name"</span>:<span class="string">"为你喝采"</span>,<span class="string">"remark_name"</span>:<span class="string">""</span>,<span class="string">"group_id"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"id"</span>:<span class="number">2088220861</span>,<span class="string">"nick_name"</span>:<span class="string">"相信自己"</span>,<span class="string">"remark_name"</span>:<span class="string">""</span>,<span class="string">"group_id"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"id"</span>:<span class="number">355421075</span>,<span class="string">"nick_name"</span>:<span class="string">"蒜苗白菜"</span>,<span class="string">"remark_name"</span>:<span class="string">""</span>,<span class="string">"group_id"</span>:<span class="number">0</span>&#125;,&#123;<span class="string">"id"</span>:<span class="number">517884615</span>,<span class="string">"nick_name"</span>:<span class="string">"小宏"</span>,<span class="string">"remark_name"</span>:<span class="string">""</span>,<span class="string">"group_id"</span>:<span class="number">0</span>&#125;]&#125;</span><br></pre></td></tr></table></figure>
<p>Then we displayed these data in an user-friendly UI</p>
<p>Relating technique:</p>
<ul>
<li>Dialog component</li>
<li>Popup Window component</li>
<li>Bitmap decoding</li>
<li>Fast cache </li>
</ul>
<p><img src="/img/weclient/fans_list.jpeg" alt="Alt text"></p>
<p>Fans profile editing feature:</p>
<p><img src="/img/weclient/edit_fans.jpeg" alt="Alt text"></p>
<p>Fans alias editing feature:</p>
<p><img src="/img/weclient/edit_fans_alias.jpeg" alt="Alt text"></p>
<h5 id="4-Notification_function">4.Notification function</h5><p>Taking full advantage of mobile platform, we used Notification API on Android system to alert users when there was new message while the app is running on background.</p>
<p>Relating technique:</p>
<ul>
<li>Notification API</li>
<li>Service component</li>
<li>Activity task mode</li>
</ul>
<h5 id="5-Open_Source">5.Open Source</h5><p>Although this was a fully functional application, it was still unofficial, we gained no support or authority from Wechat Platform, and we were only students whose credibility are limited. So, in order to show our honesty and enhance our credibility, we decided to publish our source code onto Github. The project page link: <a href="https://github.com/suanmiao/weclient" target="_blank" rel="external">https://github.com/suanmiao/weclient</a></p>
<blockquote>
<p>By now, without any promotion and advertisement, this opensource project has been starred by 130 developers and forked by 50 developers.  </p>
</blockquote>
<p>Really exciting and inspiring was this experience. It’s the first time that I fully take part in opensource community and firmly feel the super magic power of community, the influence of individuals can be amplified by the opensource community. </p>
<h4 id="Contribution">Contribution</h4><p>Without doubt, our app, as the first mobile app for account management, free account managers from desktop and they can  reply, edit message at any time. Besides that, we were also among rare developers who can release their project as opensource and be open to any advice and feedback. Consequently, we get 130 stars half a year after our release on Github. </p>
<h4 id="Milestone:">Milestone:</h4><ul>
<li>2013.12 —— Open Source project published</li>
<li>2013.12 —— First public beta version released (although there were some usability problems, we were consistently working on it)</li>
<li>2014.01 —— 500 users. This time we add feedback feature on app, and the first feedback from users was praise!</li>
<li>2014.06 —— 50 stars on Github</li>
<li>2014.07 —— 1500 users</li>
<li>2014.06 —— 100 stars on Github</li>
<li>2014.11 —— 10000 users. I can never imagine we could get such a large user base.</li>
<li>2013.03 —— 50000 users. Another surprise and inspire!</li>
</ul>
<h4 id="Tool_Used:">Tool Used:</h4><ul>
<li>Design: Photoshop</li>
<li>Request Analysis: Chrome Developer Console, Python “request” library</li>
<li>Programming: Eclipse, AndroidStudio</li>
<li>Performance Optimisation: MAT plugin(Eclipse), Android Device Monitor plugin(Eclipse)</li>
</ul>
<h3 id="Relating_Links:">Relating Links:</h3><p><a href="http://www.wandoujia.com/apps/com.suan.weclient" target="_blank" rel="external">SnapPea App Market(Wandoujia)</a> , <a href="http://shouji.baidu.com/soft/item?docid=6014819&amp;from=as&amp;f=search_app_%E5%85%AC%E4%BC%97%E5%B9%B3%E5%8F%B0%40list_1_title%401%40header_all_input" target="_blank" rel="external">Baidu App market</a><br><a href="https://github.com/suanmiao/weclient" target="_blank" rel="external">Open Source project on Github</a>  </p>
]]></content>
    <summary type="html">
    <![CDATA[<h4 id="Project_Brief">Project Brief</h4><ul>
<li><strong>Description:</strong> WeChat account management application (Open Source)</li>
<li><strong>Platform:</strong> Android</li>
<li><strong>Attribution:</strong> over <strong>530,000 users</strong>, <strong>130 stars and 50 forks on Github</strong></li>
<li><strong>Relating Techniques:</strong>  Java, <a href="http://developer.android.com/guide/components/fundamentals.html">Android Application Components</a>, <a href="http://developer.android.com/design/patterns/widgets.html">Android Widgets</a>, <a href="https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model/Introduction">HTML DOM</a>,  <a href="https://en.wikipedia.org/wiki/HTTP_cookie">HTTP Cookie</a>, Regex</li>
<li><strong>Duration: </strong> 2013.11 - 2015.5</li>
<li><strong>Team member:</strong> Hongkun Leng(Developer), Hong Xiao(Product Designer), Bin Fan(Product Designer) </li>
</ul>]]>
    
    </summary>
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="Opensource" scheme="http://yoursite.com/tags/Opensource/"/>
    
      <category term="Project" scheme="http://yoursite.com/tags/Project/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Project-eTrain]]></title>
    <link href="http://yoursite.com/2015/Project-eTrain/"/>
    <id>http://yoursite.com/2015/Project-eTrain/</id>
    <published>2015-11-11T12:53:32.000Z</published>
    <updated>2015-12-11T12:54:05.000Z</updated>
    <content type="html"><![CDATA[<h4 id="Project_Brief">Project Brief</h4><ul>
<li><strong>Description:</strong> Energy saving data transmission system, which works by managing heartbeat and data packets</li>
<li><strong>Conference:</strong>  <a href="http://icdcs-2015.cse.ohio-state.edu/" target="_blank" rel="external">IEEE ICDCS 2015</a>, Ohio, Columbus</li>
<li><strong>Atrributions:</strong> The first to prove the feasibility and efficiency of managing <strong>heartbeat packets</strong>, and the effect was remarkable. </li>
<li><strong>Relating Techniques:</strong>  <a href="https://ows.edb.utexas.edu/site/collaborative-bluetooth-edumanet/android-sdk-2" target="_blank" rel="external">Android Framework Layer</a>,  Power State in <a href="https://en.wikipedia.org/wiki/Radio_Resource_Control" target="_blank" rel="external">RRC(Radio Resource Control)</a>,  <a href="http://developer.android.com/reference/android/content/BroadcastReceiver.html" target="_blank" rel="external">Android Broadcast component</a>.</li>
</ul>
<h4 id="Background:">Background:</h4><ul>
<li>Global rapid development of mobile devices, both in quantity and capability, makes smartphones ubiquitous in our life. Under this circumstance, smartphones become increasingly important for people’s daily life</li>
<li>On the other hand, diverse mobile applications on mobile phone support real-time communication services(e.g., WhatsApp, Facebook, WeChat), these applications consume more and more energy, make battery life shorter and shorter </li>
</ul>
<a id="more"></a>
<h4 id="Process">Process</h4><h5 id="1-(Problem_Locating)_Where_does_our_battery_gone?">1.(Problem Locating) Where does our battery gone?</h5><p>After monitoring on energy consumption, we found the energy consumption distribution for a daily use of smartphone like this:</p>
<p><img src="/img/etrain/energy_consumption_distribution.png" alt="Alt text"></p>
<p>From the distribution we found that Network interface took up large part of total energy. And most of “Network Energy” was consumed by Cellular network. Under close inspection, we found “Tail energy” phenomenon in network transmission. After data transmission, the network interface in cellphone would linger in high power state for about 10 seconds. Energy consumption in this period was called “Tail energy”, which took large part in network energy. </p>
<p><img src="/img/etrain/power_state.png" alt="Alt text"></p>
<p>In order to figure out the cause of “Tail energy” in smartphone, we conducted a measurement on smartphone and found that power consumption on heartbeat transmission, a mechanism for instant message applications to keep in touch with servers, was the major cause of energy consumption( takes up about 87% of total transmission energy).</p>
<p><img src="/img/etrain/heartbeat_energy_consumption.png" alt="Alt text"></p>
<p>Besides that, heartbeat transmission periods for different applications were different, thus transmission happened randomly and “tail time” distribute randomly. In order to reduce “tail time”, we manage different heartbeat and data transmissions.  </p>
<p><img src="/img/etrain/heartbeat_distribution.png" alt="Alt text"></p>
<h5 id="2-(Models_Formulation)_How_to_manage_packets?">2.(Models Formulation) How to manage packets?</h5><p>Firstly, we identify the tail energy for each package as follow:<br>(Denote pI, pD, and pF as power levels of the IDLE, DCH and FACH states)</p>
<p><img src="/img/etrain/tail_energy_formulation.png" alt="Alt text"></p>
<p>Secondly, there would be delay for data packets if we manage their transmission. And for different data packets, there were different extent of tolerance for delay. Then, we can formulate delay cost model as follow:<br>(suppose a packet u arrives at time ta(u), then the additional delay incurred is delay = ts(u) − ta(u). Size(u) denotes the size of packet u, B(u) denotes the average bandwidth received by u and tl(u) = size(u)/B(u) is the corresponding transmission time. Weighting coefficient wi reflects the user’s preference on the application i that generates u. The profile function fi(delay) characterizes how the performance degrades with the increase of delay.)</p>
<p><img src="/img/etrain/delay_cost_model.png" alt="Alt text"></p>
<p>Thirdly, a efficient management calls for a proper strategy. Taking tolerance, packet size, transmission efficiency, user experience into account, we devised transmission strategy as follow(sure, there was a long and tough procedure before we devised this strategy):</p>
<p><img src="/img/etrain/transmission_strategy.png" alt="Alt text"></p>
<h5 id="3-_System_Implementation">3. System Implementation</h5><p>Our transmission management system consisted of three components: Heartbeat Monitor, eTrain Scheduler and eTrain Broadcast</p>
<ul>
<li>Heartbeat Monitor was responsible for monitoring heartbeat behaviors of each application and inform other components if there was a heartbeat behavior.</li>
<li>eTrain Scheduler was responsible for storage,  delay and transmission of data packets. After some calculation, this component will chose specific data packets from waiting queue and send them.</li>
<li>eTrain Broadcast component was the connection between Heartbeat Monitor and eTrain Scheduler. Because heartbeat monitoring and data scheduling behaviors happen in different system process, there should be a system-level communication between these components.</li>
</ul>
<p><img src="/img/etrain/system_overview.png" alt="Alt text"></p>
<h5 id="4-Evaluation">4.Evaluation</h5><p>Taking real world usage into account, we recorded user behaviors in three major application, email, Weibo(Chinese Twitter), and cloud storage app. The real world trace took place in cellular networks, 2-hours in campus. </p>
<p>Then, we synthesized similar data packets in laboratory and simulate previous user behaviors on a same smartphone, which was monitored by power monitor. </p>
<p>In order to make convincing comparison, we chose two relating models, PerES, eTime, as reference.</p>
<p>Results were as follow, our system could save 12%-30% of total energy. The efficiency depended on delay of data packets.</p>
<p><img src="/img/etrain/comparison_with_others.png" alt="Alt text"></p>
<h4 id="Relating_Information">Relating Information</h4><p>Experimental setup</p>
<p><img src="/img/etrain/setups.png" alt="Alt text"></p>
<p>For users who use mobile for different period of time, the energy saving effect would also diverse. More active the user, more obvious the effect.</p>
<p><img src="/img/etrain/energy_consumption_for_different_groups.png" alt="Alt text"></p>
<h4 id="Contribution">Contribution</h4><p>We were the first to prove the feasibility and efficiency of managing heartbeat packets, and the effect was remarkable. More surprisingly, same mechanism was used in Project Doze of Android system by Google. </p>
<h4 id="Relating_Links:">Relating Links:</h4><p><a href="http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7164898" target="_blank" rel="external">Paper Link</a><br><a href="https://play.google.com/store/apps/details?id=me.suanmiao.zaber" target="_blank" rel="external">System Implementation App on Google Play</a>  </p>
]]></content>
    <summary type="html">
    <![CDATA[<h4 id="Project_Brief">Project Brief</h4><ul>
<li><strong>Description:</strong> Energy saving data transmission system, which works by managing heartbeat and data packets</li>
<li><strong>Conference:</strong>  <a href="http://icdcs-2015.cse.ohio-state.edu/">IEEE ICDCS 2015</a>, Ohio, Columbus</li>
<li><strong>Atrributions:</strong> The first to prove the feasibility and efficiency of managing <strong>heartbeat packets</strong>, and the effect was remarkable. </li>
<li><strong>Relating Techniques:</strong>  <a href="https://ows.edb.utexas.edu/site/collaborative-bluetooth-edumanet/android-sdk-2">Android Framework Layer</a>,  Power State in <a href="https://en.wikipedia.org/wiki/Radio_Resource_Control">RRC(Radio Resource Control)</a>,  <a href="http://developer.android.com/reference/android/content/BroadcastReceiver.html">Android Broadcast component</a>.</li>
</ul>
<h4 id="Background:">Background:</h4><ul>
<li>Global rapid development of mobile devices, both in quantity and capability, makes smartphones ubiquitous in our life. Under this circumstance, smartphones become increasingly important for people’s daily life</li>
<li>On the other hand, diverse mobile applications on mobile phone support real-time communication services(e.g., WhatsApp, Facebook, WeChat), these applications consume more and more energy, make battery life shorter and shorter </li>
</ul>]]>
    
    </summary>
    
  </entry>
  
</feed>
